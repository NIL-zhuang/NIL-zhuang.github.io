<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>AI - Category - 抓鱼 zzy's Blog</title><link>https://nil-zhuang.github.io/categories/ai/</link><description>AI - Category - 抓鱼 zzy's Blog</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>ziyuan.zhuang@smail.nju.edu.cn (Nil Zhuang)</managingEditor><webMaster>ziyuan.zhuang@smail.nju.edu.cn (Nil Zhuang)</webMaster><copyright>Ziyuan Zhuang 2022</copyright><lastBuildDate>Mon, 14 Nov 2022 11:50:04 +0800</lastBuildDate><atom:link href="https://nil-zhuang.github.io/categories/ai/" rel="self" type="application/rss+xml"/><item><title>⚡️+🤗：Transformers + Pytorch Lightning 最佳实战</title><link>https://nil-zhuang.github.io/2022/11/hf_pl/</link><pubDate>Mon, 14 Nov 2022 11:50:04 +0800</pubDate><author>nil zhuang</author><guid>https://nil-zhuang.github.io/2022/11/hf_pl/</guid><description><![CDATA[<div class="featured-image">
                <img src="https://lemonzzy.oss-cn-hangzhou.aliyuncs.com/typora/202211141605838.png" referrerpolicy="no-referrer">
            </div><h1 id="transformers--pytorch-lightning-最佳实战">⚡️+🤗：Transformers + Pytorch Lightning 最佳实战</h1>
<h2 id="背景">背景</h2>
<p>Pytorch Lightning 是 pytorch 的一个上层封装，类似于 Keras 之于 tensorflow。我们希望使用这样一个优秀的框架来实现对 huggingface 模型的快速训练和开发测试。</p>
<h2 id="数据集-dataset">数据集 Dataset</h2>
<p>对于任何一个 dataset，将其拆分为有监督训练的 src 和 tgt 两个 label</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="k">class</span> <span class="nc">DataModule</span><span class="p">(</span><span class="n">Dataset</span><span class="p">):</span>  
</span></span><span class="line"><span class="cl">    <span class="k">def</span> <span class="fm">__init__</span><span class="p">(</span>  
</span></span><span class="line"><span class="cl">        <span class="bp">self</span><span class="p">,</span>  
</span></span><span class="line"><span class="cl">        <span class="n">data</span><span class="p">:</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">,</span>  
</span></span><span class="line"><span class="cl">        <span class="n">tokenizer</span><span class="p">:</span> <span class="n">PreTrainedTokenizer</span><span class="p">,</span>  
</span></span><span class="line"><span class="cl">        <span class="n">source_max_token_len</span><span class="p">:</span> <span class="nb">int</span><span class="p">,</span>  
</span></span><span class="line"><span class="cl">        <span class="n">target_max_token_len</span><span class="p">:</span> <span class="nb">int</span><span class="p">,</span>  
</span></span><span class="line"><span class="cl">    <span class="p">)</span> <span class="o">-&gt;</span> <span class="kc">None</span><span class="p">:</span>  
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;&#34;&#34; Pytorch Dataset Module for input data  
</span></span></span><span class="line"><span class="cl"><span class="s2">        Args:            data (pd.DataFrame): Dataframe containing input data            tokenizer (PreTrainedTokenizer): Tokenizer for encoding input data            source_max_token_len (int): Max token length for source text            target_max_token_len (int): Max token length for target text        &#34;&#34;&#34;</span>        <span class="bp">self</span><span class="o">.</span><span class="n">data</span> <span class="o">=</span> <span class="n">data</span>  
</span></span><span class="line"><span class="cl">        <span class="bp">self</span><span class="o">.</span><span class="n">tokenizer</span> <span class="o">=</span> <span class="n">tokenizer</span>  
</span></span><span class="line"><span class="cl">        <span class="bp">self</span><span class="o">.</span><span class="n">source_max_token_len</span> <span class="o">=</span> <span class="n">source_max_token_len</span>  
</span></span><span class="line"><span class="cl">        <span class="bp">self</span><span class="o">.</span><span class="n">target_max_token_len</span> <span class="o">=</span> <span class="n">target_max_token_len</span>  
</span></span><span class="line"><span class="cl">  
</span></span><span class="line"><span class="cl">    <span class="k">def</span> <span class="fm">__len__</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>  
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="nb">len</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">data</span><span class="p">)</span>  
</span></span><span class="line"><span class="cl">  
</span></span><span class="line"><span class="cl">    <span class="k">def</span> <span class="fm">__getitem__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">index</span><span class="p">):</span>  
</span></span><span class="line"><span class="cl">        <span class="n">data_row</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">data</span><span class="o">.</span><span class="n">iloc</span><span class="p">[</span><span class="n">index</span><span class="p">]</span>  
</span></span><span class="line"><span class="cl">  
</span></span><span class="line"><span class="cl">        <span class="n">src_text_encoding</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">tokenizer</span><span class="p">(</span>  
</span></span><span class="line"><span class="cl">            <span class="n">data_row</span><span class="p">[</span><span class="s2">&#34;src&#34;</span><span class="p">],</span>  
</span></span><span class="line"><span class="cl">            <span class="n">max_length</span><span class="o">=</span><span class="bp">self</span><span class="o">.</span><span class="n">source_max_token_len</span><span class="p">,</span>  
</span></span><span class="line"><span class="cl">            <span class="n">padding</span><span class="o">=</span><span class="s2">&#34;max_length&#34;</span><span class="p">,</span>  
</span></span><span class="line"><span class="cl">            <span class="n">truncation</span><span class="o">=</span><span class="kc">True</span><span class="p">,</span>  
</span></span><span class="line"><span class="cl">            <span class="n">return_tensors</span><span class="o">=</span><span class="s2">&#34;pt&#34;</span><span class="p">,</span>  
</span></span><span class="line"><span class="cl">            <span class="n">return_attention_mask</span><span class="o">=</span><span class="kc">True</span><span class="p">,</span>  
</span></span><span class="line"><span class="cl">            <span class="n">add_special_tokens</span><span class="o">=</span><span class="kc">True</span>  
</span></span><span class="line"><span class="cl">        <span class="p">)</span>  
</span></span><span class="line"><span class="cl">        <span class="n">tgt_text_encoding</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">tokenizer</span><span class="p">(</span>  
</span></span><span class="line"><span class="cl">            <span class="n">data_row</span><span class="p">[</span><span class="s1">&#39;tgt&#39;</span><span class="p">],</span>  
</span></span><span class="line"><span class="cl">            <span class="n">max_length</span><span class="o">=</span><span class="bp">self</span><span class="o">.</span><span class="n">target_max_token_len</span><span class="p">,</span>  
</span></span><span class="line"><span class="cl">            <span class="n">padding</span><span class="o">=</span><span class="s2">&#34;max_length&#34;</span><span class="p">,</span>  
</span></span><span class="line"><span class="cl">            <span class="n">truncation</span><span class="o">=</span><span class="kc">True</span><span class="p">,</span>  
</span></span><span class="line"><span class="cl">            <span class="n">return_attention_mask</span><span class="o">=</span><span class="kc">True</span><span class="p">,</span>  
</span></span><span class="line"><span class="cl">            <span class="n">return_tensors</span><span class="o">=</span><span class="s2">&#34;pt&#34;</span><span class="p">,</span>  
</span></span><span class="line"><span class="cl">            <span class="n">add_special_tokens</span><span class="o">=</span><span class="kc">True</span>  
</span></span><span class="line"><span class="cl">        <span class="p">)</span>  
</span></span><span class="line"><span class="cl">        <span class="n">labels</span> <span class="o">=</span> <span class="n">tgt_text_encoding</span><span class="p">[</span><span class="s2">&#34;input_ids&#34;</span><span class="p">]</span>  
</span></span><span class="line"><span class="cl">        <span class="n">labels</span><span class="p">[</span><span class="n">labels</span> <span class="o">==</span> <span class="mi">0</span><span class="p">]</span> <span class="o">=</span> <span class="o">-</span><span class="mi">100</span>  
</span></span><span class="line"><span class="cl">  
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="nb">dict</span><span class="p">(</span>  
</span></span><span class="line"><span class="cl">            <span class="n">source_text_input_ids</span><span class="o">=</span><span class="n">src_text_encoding</span><span class="p">[</span><span class="s2">&#34;input_ids&#34;</span><span class="p">]</span><span class="o">.</span><span class="n">flatten</span><span class="p">(),</span>  
</span></span><span class="line"><span class="cl">            <span class="n">source_text_attention_mask</span><span class="o">=</span><span class="n">src_text_encoding</span><span class="p">[</span><span class="s2">&#34;attention_mask&#34;</span><span class="p">]</span><span class="o">.</span><span class="n">flatten</span><span class="p">(),</span>  
</span></span><span class="line"><span class="cl">            <span class="n">labels</span><span class="o">=</span><span class="n">labels</span><span class="o">.</span><span class="n">flatten</span><span class="p">(),</span>  
</span></span><span class="line"><span class="cl">            <span class="n">labels_attention_mask</span><span class="o">=</span><span class="n">tgt_text_encoding</span><span class="p">[</span><span class="s2">&#34;attention_mask&#34;</span><span class="p">]</span><span class="o">.</span><span class="n">flatten</span><span class="p">(),</span>  
</span></span><span class="line"><span class="cl">        <span class="p">)</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>然后构建 dataset module，组合 training data 和 valid data</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span><span class="lnt">51
</span><span class="lnt">52
</span><span class="lnt">53
</span><span class="lnt">54
</span><span class="lnt">55
</span><span class="lnt">56
</span><span class="lnt">57
</span><span class="lnt">58
</span><span class="lnt">59
</span><span class="lnt">60
</span><span class="lnt">61
</span><span class="lnt">62
</span><span class="lnt">63
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="k">class</span> <span class="nc">DatasetModule</span><span class="p">(</span><span class="n">pl</span><span class="o">.</span><span class="n">LightningDataModule</span><span class="p">):</span>  
</span></span><span class="line"><span class="cl">    <span class="k">def</span> <span class="fm">__init__</span><span class="p">(</span>  
</span></span><span class="line"><span class="cl">        <span class="bp">self</span><span class="p">,</span>  
</span></span><span class="line"><span class="cl">        <span class="n">train_df</span><span class="p">:</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">,</span>  
</span></span><span class="line"><span class="cl">        <span class="n">valid_df</span><span class="p">:</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">,</span>  
</span></span><span class="line"><span class="cl">        <span class="n">tokenizer</span><span class="p">:</span> <span class="n">PreTrainedTokenizer</span><span class="p">,</span>  
</span></span><span class="line"><span class="cl">        <span class="n">batch_size</span><span class="p">:</span> <span class="nb">int</span> <span class="o">=</span> <span class="mi">4</span><span class="p">,</span>  
</span></span><span class="line"><span class="cl">        <span class="n">source_max_token_len</span><span class="p">:</span> <span class="nb">int</span> <span class="o">=</span> <span class="mi">512</span><span class="p">,</span>  
</span></span><span class="line"><span class="cl">        <span class="n">target_max_token_len</span><span class="p">:</span> <span class="nb">int</span> <span class="o">=</span> <span class="mi">512</span><span class="p">,</span>  
</span></span><span class="line"><span class="cl">        <span class="n">num_workers</span><span class="p">:</span> <span class="nb">int</span> <span class="o">=</span> <span class="mi">4</span><span class="p">,</span>  
</span></span><span class="line"><span class="cl">        <span class="n">shuffle</span><span class="p">:</span> <span class="nb">bool</span> <span class="o">=</span> <span class="kc">True</span><span class="p">,</span>  
</span></span><span class="line"><span class="cl">    <span class="p">)</span> <span class="o">-&gt;</span> <span class="kc">None</span><span class="p">:</span>  
</span></span><span class="line"><span class="cl">        <span class="nb">super</span><span class="p">()</span><span class="o">.</span><span class="fm">__init__</span><span class="p">()</span>  
</span></span><span class="line"><span class="cl">        <span class="bp">self</span><span class="o">.</span><span class="n">tokenizer</span> <span class="o">=</span> <span class="n">tokenizer</span>  
</span></span><span class="line"><span class="cl">        <span class="bp">self</span><span class="o">.</span><span class="n">train_df</span> <span class="o">=</span> <span class="n">train_df</span>  
</span></span><span class="line"><span class="cl">        <span class="bp">self</span><span class="o">.</span><span class="n">valid_df</span> <span class="o">=</span> <span class="n">valid_df</span>  
</span></span><span class="line"><span class="cl">        <span class="bp">self</span><span class="o">.</span><span class="n">batch_size</span> <span class="o">=</span> <span class="n">batch_size</span>  
</span></span><span class="line"><span class="cl">        <span class="bp">self</span><span class="o">.</span><span class="n">source_max_token_len</span> <span class="o">=</span> <span class="n">source_max_token_len</span>  
</span></span><span class="line"><span class="cl">        <span class="bp">self</span><span class="o">.</span><span class="n">target_max_token_len</span> <span class="o">=</span> <span class="n">target_max_token_len</span>  
</span></span><span class="line"><span class="cl">        <span class="bp">self</span><span class="o">.</span><span class="n">num_workers</span> <span class="o">=</span> <span class="n">num_workers</span>  
</span></span><span class="line"><span class="cl">        <span class="bp">self</span><span class="o">.</span><span class="n">shuffle</span> <span class="o">=</span> <span class="n">shuffle</span>  
</span></span><span class="line"><span class="cl">  
</span></span><span class="line"><span class="cl">    <span class="k">def</span> <span class="nf">setup</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">stage</span><span class="o">=</span><span class="kc">None</span><span class="p">):</span>  
</span></span><span class="line"><span class="cl">        <span class="bp">self</span><span class="o">.</span><span class="n">train_dataset</span> <span class="o">=</span> <span class="n">DataModule</span><span class="p">(</span>  
</span></span><span class="line"><span class="cl">            <span class="bp">self</span><span class="o">.</span><span class="n">train_df</span><span class="p">,</span>  
</span></span><span class="line"><span class="cl">            <span class="bp">self</span><span class="o">.</span><span class="n">tokenizer</span><span class="p">,</span>  
</span></span><span class="line"><span class="cl">            <span class="bp">self</span><span class="o">.</span><span class="n">source_max_token_len</span><span class="p">,</span>  
</span></span><span class="line"><span class="cl">            <span class="bp">self</span><span class="o">.</span><span class="n">target_max_token_len</span>  
</span></span><span class="line"><span class="cl">        <span class="p">)</span>  
</span></span><span class="line"><span class="cl">  
</span></span><span class="line"><span class="cl">        <span class="bp">self</span><span class="o">.</span><span class="n">valid_dataset</span> <span class="o">=</span> <span class="n">DataModule</span><span class="p">(</span>  
</span></span><span class="line"><span class="cl">            <span class="bp">self</span><span class="o">.</span><span class="n">valid_df</span><span class="p">,</span>  
</span></span><span class="line"><span class="cl">            <span class="bp">self</span><span class="o">.</span><span class="n">tokenizer</span><span class="p">,</span>  
</span></span><span class="line"><span class="cl">            <span class="bp">self</span><span class="o">.</span><span class="n">source_max_token_len</span><span class="p">,</span>  
</span></span><span class="line"><span class="cl">            <span class="bp">self</span><span class="o">.</span><span class="n">target_max_token_len</span>  
</span></span><span class="line"><span class="cl">        <span class="p">)</span>  
</span></span><span class="line"><span class="cl">  
</span></span><span class="line"><span class="cl">    <span class="k">def</span> <span class="nf">train_dataloader</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>  
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="n">DataLoader</span><span class="p">(</span>  
</span></span><span class="line"><span class="cl">            <span class="bp">self</span><span class="o">.</span><span class="n">train_dataset</span><span class="p">,</span>  
</span></span><span class="line"><span class="cl">            <span class="n">batch_size</span><span class="o">=</span><span class="bp">self</span><span class="o">.</span><span class="n">batch_size</span><span class="p">,</span>  
</span></span><span class="line"><span class="cl">            <span class="n">shuffle</span><span class="o">=</span><span class="bp">self</span><span class="o">.</span><span class="n">shuffle</span><span class="p">,</span>  
</span></span><span class="line"><span class="cl">            <span class="n">num_workers</span><span class="o">=</span><span class="bp">self</span><span class="o">.</span><span class="n">num_workers</span><span class="p">,</span>  
</span></span><span class="line"><span class="cl">            <span class="n">pin_memory</span><span class="o">=</span><span class="kc">True</span><span class="p">,</span>  
</span></span><span class="line"><span class="cl">        <span class="p">)</span>  
</span></span><span class="line"><span class="cl">  
</span></span><span class="line"><span class="cl">    <span class="k">def</span> <span class="nf">val_dataloader</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>  
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="n">DataLoader</span><span class="p">(</span>  
</span></span><span class="line"><span class="cl">            <span class="bp">self</span><span class="o">.</span><span class="n">valid_dataset</span><span class="p">,</span>  
</span></span><span class="line"><span class="cl">            <span class="n">batch_size</span><span class="o">=</span><span class="bp">self</span><span class="o">.</span><span class="n">batch_size</span><span class="p">,</span>  
</span></span><span class="line"><span class="cl">            <span class="n">shuffle</span><span class="o">=</span><span class="kc">False</span><span class="p">,</span>  
</span></span><span class="line"><span class="cl">            <span class="n">num_workers</span><span class="o">=</span><span class="bp">self</span><span class="o">.</span><span class="n">num_workers</span><span class="p">,</span>  
</span></span><span class="line"><span class="cl">            <span class="n">pin_memory</span><span class="o">=</span><span class="kc">True</span><span class="p">,</span>  
</span></span><span class="line"><span class="cl">        <span class="p">)</span>  
</span></span><span class="line"><span class="cl">  
</span></span><span class="line"><span class="cl">    <span class="k">def</span> <span class="nf">test_dataloader</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>  
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="n">DataLoader</span><span class="p">(</span>  
</span></span><span class="line"><span class="cl">            <span class="bp">self</span><span class="o">.</span><span class="n">valid_dataset</span><span class="p">,</span>  
</span></span><span class="line"><span class="cl">            <span class="n">batch_size</span><span class="o">=</span><span class="bp">self</span><span class="o">.</span><span class="n">batch_size</span><span class="p">,</span>  
</span></span><span class="line"><span class="cl">            <span class="n">shuffle</span><span class="o">=</span><span class="kc">False</span><span class="p">,</span>  
</span></span><span class="line"><span class="cl">            <span class="n">num_workers</span><span class="o">=</span><span class="bp">self</span><span class="o">.</span><span class="n">num_workers</span><span class="p">,</span>  
</span></span><span class="line"><span class="cl">            <span class="n">pin_memory</span><span class="o">=</span><span class="kc">True</span>  
</span></span><span class="line"><span class="cl">        <span class="p">)</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h2 id="模型">模型</h2>
<p>我们以 T5 为例</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="k">class</span> <span class="nc">T5Seq2SeqLM</span><span class="p">(</span><span class="n">T5ForConditionalGeneration</span><span class="p">,</span> <span class="n">ABC</span><span class="p">):</span>  
</span></span><span class="line"><span class="cl">    <span class="k">def</span> <span class="fm">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">config</span><span class="p">:</span> <span class="n">T5Config</span><span class="p">,</span> <span class="o">*</span><span class="n">args</span><span class="p">,</span> <span class="o">**</span><span class="n">kwargs</span><span class="p">):</span>  
</span></span><span class="line"><span class="cl">        <span class="nb">super</span><span class="p">()</span><span class="o">.</span><span class="fm">__init__</span><span class="p">(</span><span class="n">config</span><span class="p">)</span>  
</span></span><span class="line"><span class="cl">  
</span></span><span class="line"><span class="cl">    <span class="k">def</span> <span class="nf">hidden_state_sample</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">hidden_states</span><span class="p">,</span> <span class="n">attention_mask</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="n">AutoEncoderOutput</span><span class="p">:</span>  
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;&#34;&#34; Sample from the hidden state distribution  
</span></span></span><span class="line"><span class="cl"><span class="s2">        &#34;&#34;&#34;</span>        <span class="k">return</span> <span class="n">AutoEncoderOutput</span><span class="p">(</span>  
</span></span><span class="line"><span class="cl">            <span class="n">hidden_states</span><span class="o">=</span><span class="n">hidden_states</span><span class="p">,</span>  
</span></span><span class="line"><span class="cl">            <span class="n">attention_mask</span><span class="o">=</span><span class="n">attention_mask</span><span class="p">,</span>  
</span></span><span class="line"><span class="cl">        <span class="p">)</span>  
</span></span><span class="line"><span class="cl">  
</span></span><span class="line"><span class="cl">    <span class="k">def</span> <span class="nf">compute_loss</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">lm_logits</span><span class="p">,</span> <span class="n">labels</span><span class="p">,</span> <span class="n">ae_output</span><span class="p">:</span> <span class="n">AutoEncoderOutput</span><span class="p">):</span>  
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;&#34;&#34; Compute the loss  
</span></span></span><span class="line"><span class="cl"><span class="s2">        Args:            lm_logits (torch.FloatTensor): logits from the language model            labels (torch.LongTensor): labels for the language model            ae_output (AutoEncoderOutput): output from the autoencoder        Returns:            torch.FloatTensor: loss        &#34;&#34;&#34;</span>        <span class="n">loss</span> <span class="o">=</span> <span class="kc">None</span>  
</span></span><span class="line"><span class="cl">        <span class="k">if</span> <span class="n">labels</span> <span class="ow">is</span> <span class="ow">not</span> <span class="kc">None</span><span class="p">:</span>  
</span></span><span class="line"><span class="cl">            <span class="n">loss_fct</span> <span class="o">=</span> <span class="n">CrossEntropyLoss</span><span class="p">(</span><span class="n">ignore_index</span><span class="o">=-</span><span class="mi">100</span><span class="p">)</span>  
</span></span><span class="line"><span class="cl">            <span class="n">loss</span> <span class="o">=</span> <span class="n">loss_fct</span><span class="p">(</span><span class="n">lm_logits</span><span class="o">.</span><span class="n">view</span><span class="p">(</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="n">lm_logits</span><span class="o">.</span><span class="n">size</span><span class="p">(</span><span class="o">-</span><span class="mi">1</span><span class="p">)),</span> <span class="n">labels</span><span class="o">.</span><span class="n">view</span><span class="p">(</span><span class="o">-</span><span class="mi">1</span><span class="p">))</span>  
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="n">loss</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="k">def</span> <span class="nf">prepare_inputs_for_generation</span><span class="p">(</span>  
</span></span><span class="line"><span class="cl">            <span class="bp">self</span><span class="p">,</span>  
</span></span><span class="line"><span class="cl">            <span class="n">input_ids</span><span class="p">,</span>  
</span></span><span class="line"><span class="cl">            <span class="n">past</span><span class="o">=</span><span class="kc">None</span><span class="p">,</span>  
</span></span><span class="line"><span class="cl">            <span class="n">attention_mask</span><span class="o">=</span><span class="kc">None</span><span class="p">,</span>  
</span></span><span class="line"><span class="cl">            <span class="n">head_mask</span><span class="o">=</span><span class="kc">None</span><span class="p">,</span>  
</span></span><span class="line"><span class="cl">            <span class="n">decoder_head_mask</span><span class="o">=</span><span class="kc">None</span><span class="p">,</span>  
</span></span><span class="line"><span class="cl">            <span class="c1"># cross_attn_head_mask=None,  </span>
</span></span><span class="line"><span class="cl">            <span class="n">use_cache</span><span class="o">=</span><span class="kc">None</span><span class="p">,</span>  
</span></span><span class="line"><span class="cl">            <span class="n">encoder_outputs</span><span class="o">=</span><span class="kc">None</span><span class="p">,</span>  
</span></span><span class="line"><span class="cl">            <span class="o">**</span><span class="n">kwargs</span>  
</span></span><span class="line"><span class="cl">    <span class="p">):</span>  
</span></span><span class="line"><span class="cl">        <span class="k">if</span> <span class="n">past</span> <span class="ow">is</span> <span class="ow">not</span> <span class="kc">None</span><span class="p">:</span>  
</span></span><span class="line"><span class="cl">            <span class="n">input_ids</span> <span class="o">=</span> <span class="n">input_ids</span><span class="p">[:,</span> <span class="o">-</span><span class="mi">1</span><span class="p">:]</span>  
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="p">{</span>  
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;decoder_input_ids&#34;</span><span class="p">:</span> <span class="n">input_ids</span><span class="p">,</span>  
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;past_key_values&#34;</span><span class="p">:</span> <span class="n">past</span><span class="p">,</span>  
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;encoder_outputs&#34;</span><span class="p">:</span> <span class="n">encoder_outputs</span><span class="p">,</span>  
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;attention_mask&#34;</span><span class="p">:</span> <span class="n">attention_mask</span><span class="p">,</span>  
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;head_mask&#34;</span><span class="p">:</span> <span class="n">head_mask</span><span class="p">,</span>  
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;decoder_head_mask&#34;</span><span class="p">:</span> <span class="n">decoder_head_mask</span><span class="p">,</span>  
</span></span><span class="line"><span class="cl">            <span class="c1"># &#34;cross_attn_head_mask&#34;: cross_attn_head_mask,  </span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;use_cache&#34;</span><span class="p">:</span> <span class="n">use_cache</span><span class="p">,</span>  
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h2 id="训练">训练</h2>
<p>首先我们需要构建一个 HFModel 的基础框架，给 pytorch lightning 调用</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span><span class="lnt">51
</span><span class="lnt">52
</span><span class="lnt">53
</span><span class="lnt">54
</span><span class="lnt">55
</span><span class="lnt">56
</span><span class="lnt">57
</span><span class="lnt">58
</span><span class="lnt">59
</span><span class="lnt">60
</span><span class="lnt">61
</span><span class="lnt">62
</span><span class="lnt">63
</span><span class="lnt">64
</span><span class="lnt">65
</span><span class="lnt">66
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="k">class</span> <span class="nc">HFModel</span><span class="p">(</span><span class="n">pl</span><span class="o">.</span><span class="n">LightningModule</span><span class="p">):</span>  
</span></span><span class="line"><span class="cl">    <span class="k">def</span> <span class="fm">__init__</span><span class="p">(</span>  
</span></span><span class="line"><span class="cl">            <span class="bp">self</span><span class="p">,</span>  
</span></span><span class="line"><span class="cl">            <span class="n">tokenizer</span><span class="p">,</span>  
</span></span><span class="line"><span class="cl">            <span class="n">model</span><span class="p">,</span>  
</span></span><span class="line"><span class="cl">            <span class="n">config</span><span class="p">:</span> <span class="n">Dict</span><span class="p">,</span>  
</span></span><span class="line"><span class="cl">    <span class="p">)</span> <span class="o">-&gt;</span> <span class="kc">None</span><span class="p">:</span>  
</span></span><span class="line"><span class="cl">        <span class="nb">super</span><span class="p">()</span><span class="o">.</span><span class="fm">__init__</span><span class="p">()</span>  
</span></span><span class="line"><span class="cl">        <span class="bp">self</span><span class="o">.</span><span class="n">model</span> <span class="o">=</span> <span class="n">model</span>  
</span></span><span class="line"><span class="cl">        <span class="bp">self</span><span class="o">.</span><span class="n">tokenizer</span> <span class="o">=</span> <span class="n">tokenizer</span>  
</span></span><span class="line"><span class="cl">        <span class="bp">self</span><span class="o">.</span><span class="n">average_training_loss</span> <span class="o">=</span> <span class="kc">None</span>  
</span></span><span class="line"><span class="cl">        <span class="bp">self</span><span class="o">.</span><span class="n">average_validation_loss</span> <span class="o">=</span> <span class="kc">None</span>  
</span></span><span class="line"><span class="cl">        <span class="bp">self</span><span class="o">.</span><span class="n">config</span> <span class="o">=</span> <span class="n">config</span>  
</span></span><span class="line"><span class="cl">  
</span></span><span class="line"><span class="cl">    <span class="k">def</span> <span class="nf">forward</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">input_ids</span><span class="p">,</span> <span class="n">attention_mask</span><span class="p">,</span> <span class="n">decoder_attention_mask</span><span class="p">,</span> <span class="n">labels</span><span class="o">=</span><span class="kc">None</span><span class="p">):</span>  
</span></span><span class="line"><span class="cl">        <span class="n">output</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">model</span><span class="p">(</span>  
</span></span><span class="line"><span class="cl">            <span class="n">input_ids</span><span class="o">=</span><span class="n">input_ids</span><span class="p">,</span>  
</span></span><span class="line"><span class="cl">            <span class="n">attention_mask</span><span class="o">=</span><span class="n">attention_mask</span><span class="p">,</span>  
</span></span><span class="line"><span class="cl">            <span class="n">decoder_attention_mask</span><span class="o">=</span><span class="n">decoder_attention_mask</span><span class="p">,</span>  
</span></span><span class="line"><span class="cl">            <span class="n">labels</span><span class="o">=</span><span class="n">labels</span><span class="p">,</span>  
</span></span><span class="line"><span class="cl">        <span class="p">)</span>  
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="n">output</span><span class="o">.</span><span class="n">loss</span><span class="p">,</span> <span class="n">output</span><span class="o">.</span><span class="n">logits</span>  
</span></span><span class="line"><span class="cl">  
</span></span><span class="line"><span class="cl">    <span class="k">def</span> <span class="nf">compute_loss</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">batch</span><span class="p">,</span> <span class="n">batch_size</span><span class="p">):</span>  
</span></span><span class="line"><span class="cl">        <span class="n">input_ids</span> <span class="o">=</span> <span class="n">batch</span><span class="p">[</span><span class="s1">&#39;source_text_input_ids&#39;</span><span class="p">]</span>  
</span></span><span class="line"><span class="cl">        <span class="n">attention_mask</span> <span class="o">=</span> <span class="n">batch</span><span class="p">[</span><span class="s1">&#39;source_text_attention_mask&#39;</span><span class="p">]</span>  
</span></span><span class="line"><span class="cl">        <span class="n">labels_attention_mask</span> <span class="o">=</span> <span class="n">batch</span><span class="p">[</span><span class="s1">&#39;labels_attention_mask&#39;</span><span class="p">]</span>  
</span></span><span class="line"><span class="cl">        <span class="n">labels</span> <span class="o">=</span> <span class="n">batch</span><span class="p">[</span><span class="s1">&#39;labels&#39;</span><span class="p">]</span>  
</span></span><span class="line"><span class="cl">  
</span></span><span class="line"><span class="cl">        <span class="n">loss</span><span class="p">,</span> <span class="n">logits</span> <span class="o">=</span> <span class="bp">self</span><span class="p">(</span>  
</span></span><span class="line"><span class="cl">            <span class="n">input_ids</span><span class="o">=</span><span class="n">input_ids</span><span class="p">,</span>  
</span></span><span class="line"><span class="cl">            <span class="n">attention_mask</span><span class="o">=</span><span class="n">attention_mask</span><span class="p">,</span>  
</span></span><span class="line"><span class="cl">            <span class="n">labels</span><span class="o">=</span><span class="n">labels</span><span class="p">,</span>  
</span></span><span class="line"><span class="cl">            <span class="n">decoder_attention_mask</span><span class="o">=</span><span class="n">labels_attention_mask</span>  
</span></span><span class="line"><span class="cl">        <span class="p">)</span>  
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="n">loss</span>  
</span></span><span class="line"><span class="cl">  
</span></span><span class="line"><span class="cl">    <span class="k">def</span> <span class="nf">training_step</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">batch</span><span class="p">,</span> <span class="n">batch_size</span><span class="p">):</span>  
</span></span><span class="line"><span class="cl">        <span class="n">loss</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">compute_loss</span><span class="p">(</span><span class="n">batch</span><span class="p">,</span> <span class="n">batch_size</span><span class="p">)</span>  
</span></span><span class="line"><span class="cl">        <span class="bp">self</span><span class="o">.</span><span class="n">log</span><span class="p">(</span><span class="s2">&#34;train_loss&#34;</span><span class="p">,</span> <span class="n">loss</span><span class="p">,</span> <span class="n">prog_bar</span><span class="o">=</span><span class="kc">True</span><span class="p">,</span> <span class="n">logger</span><span class="o">=</span><span class="kc">True</span><span class="p">,</span> <span class="n">on_epoch</span><span class="o">=</span><span class="kc">True</span><span class="p">,</span> <span class="n">on_step</span><span class="o">=</span><span class="kc">True</span><span class="p">,</span> <span class="n">sync_dist</span><span class="o">=</span><span class="kc">True</span><span class="p">)</span>  
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="n">loss</span>  
</span></span><span class="line"><span class="cl">  
</span></span><span class="line"><span class="cl">    <span class="k">def</span> <span class="nf">validation_step</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">batch</span><span class="p">,</span> <span class="n">batch_size</span><span class="p">):</span>  
</span></span><span class="line"><span class="cl">        <span class="n">loss</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">compute_loss</span><span class="p">(</span><span class="n">batch</span><span class="p">,</span> <span class="n">batch_size</span><span class="p">)</span>  
</span></span><span class="line"><span class="cl">        <span class="bp">self</span><span class="o">.</span><span class="n">log</span><span class="p">(</span><span class="s2">&#34;val_loss&#34;</span><span class="p">,</span> <span class="n">loss</span><span class="p">,</span> <span class="n">prog_bar</span><span class="o">=</span><span class="kc">True</span><span class="p">,</span> <span class="n">logger</span><span class="o">=</span><span class="kc">True</span><span class="p">,</span> <span class="n">on_epoch</span><span class="o">=</span><span class="kc">True</span><span class="p">,</span> <span class="n">on_step</span><span class="o">=</span><span class="kc">True</span><span class="p">,</span> <span class="n">sync_dist</span><span class="o">=</span><span class="kc">True</span><span class="p">)</span>  
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="n">loss</span>  
</span></span><span class="line"><span class="cl">  
</span></span><span class="line"><span class="cl">    <span class="k">def</span> <span class="nf">test_step</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">batch</span><span class="p">,</span> <span class="n">batch_size</span><span class="p">):</span>  
</span></span><span class="line"><span class="cl">        <span class="n">loss</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">compute_loss</span><span class="p">(</span><span class="n">batch</span><span class="p">,</span> <span class="n">batch_size</span><span class="p">)</span>  
</span></span><span class="line"><span class="cl">        <span class="bp">self</span><span class="o">.</span><span class="n">log</span><span class="p">(</span><span class="s2">&#34;test_loss&#34;</span><span class="p">,</span> <span class="n">loss</span><span class="p">,</span> <span class="n">prog_bar</span><span class="o">=</span><span class="kc">True</span><span class="p">,</span> <span class="n">logger</span><span class="o">=</span><span class="kc">True</span><span class="p">,</span> <span class="n">sync_dist</span><span class="o">=</span><span class="kc">True</span><span class="p">)</span>  
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="n">loss</span>  
</span></span><span class="line"><span class="cl">  
</span></span><span class="line"><span class="cl">    <span class="k">def</span> <span class="nf">configure_optimizers</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>  
</span></span><span class="line"><span class="cl">        <span class="n">optimizer</span> <span class="o">=</span> <span class="n">AdamW</span><span class="p">(</span>  
</span></span><span class="line"><span class="cl">            <span class="bp">self</span><span class="o">.</span><span class="n">parameters</span><span class="p">(),</span>  
</span></span><span class="line"><span class="cl">            <span class="n">lr</span><span class="o">=</span><span class="bp">self</span><span class="o">.</span><span class="n">config</span><span class="p">[</span><span class="s1">&#39;train&#39;</span><span class="p">][</span><span class="s1">&#39;learning_rate&#39;</span><span class="p">]</span>  
</span></span><span class="line"><span class="cl">        <span class="p">)</span>        <span class="n">scheduler</span> <span class="o">=</span> <span class="n">torch</span><span class="o">.</span><span class="n">optim</span><span class="o">.</span><span class="n">lr_scheduler</span><span class="o">.</span><span class="n">ReduceLROnPlateau</span><span class="p">(</span>  
</span></span><span class="line"><span class="cl">            <span class="n">optimizer</span><span class="p">,</span> <span class="n">mode</span><span class="o">=</span><span class="s1">&#39;min&#39;</span><span class="p">,</span> <span class="n">factor</span><span class="o">=</span><span class="mf">0.5</span><span class="p">,</span> <span class="n">patience</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span> <span class="n">verbose</span><span class="o">=</span><span class="kc">True</span>  
</span></span><span class="line"><span class="cl">        <span class="p">)</span>  
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="p">{</span>  
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;optimizer&#34;</span><span class="p">:</span> <span class="n">optimizer</span><span class="p">,</span>  
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;lr_scheduler&#34;</span><span class="p">:</span> <span class="p">{</span>  
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;scheduler&#34;</span><span class="p">:</span> <span class="n">scheduler</span><span class="p">,</span>  
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;monitor&#34;</span><span class="p">:</span> <span class="s2">&#34;val_loss&#34;</span>  
</span></span><span class="line"><span class="cl">            <span class="p">}</span>  
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>transformers 最大的不同在于它的 checkpoint，需要 save_pretrained 和 from_pretrained，因此我们要设计一个单独的 checkpoint 方法，即 HFTrainer</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="k">class</span> <span class="nc">HFTrainer</span><span class="p">(</span><span class="n">pl</span><span class="o">.</span><span class="n">Trainer</span><span class="p">):</span>  
</span></span><span class="line"><span class="cl">    <span class="k">def</span> <span class="nf">save_checkpoint</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">filepath</span><span class="p">:</span> <span class="n">Union</span><span class="p">[</span><span class="nb">str</span><span class="p">,</span> <span class="n">Path</span><span class="p">],</span> <span class="n">weights_only</span><span class="p">:</span> <span class="nb">bool</span> <span class="o">=</span> <span class="kc">False</span><span class="p">,</span> <span class="n">storage_options</span><span class="p">:</span> <span class="n">Optional</span><span class="p">[</span><span class="n">Any</span><span class="p">]</span> <span class="o">=</span> <span class="kc">None</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="kc">None</span><span class="p">:</span>  
</span></span><span class="line"><span class="cl">        <span class="k">if</span> <span class="bp">self</span><span class="o">.</span><span class="n">is_global_zero</span><span class="p">:</span>  
</span></span><span class="line"><span class="cl">            <span class="n">dpath</span> <span class="o">=</span> <span class="n">os</span><span class="o">.</span><span class="n">path</span><span class="o">.</span><span class="n">splitext</span><span class="p">(</span><span class="n">filepath</span><span class="p">)[</span><span class="mi">0</span><span class="p">]</span><span class="o">.</span><span class="n">replace</span><span class="p">(</span><span class="s2">&#34;=&#34;</span><span class="p">,</span> <span class="s1">&#39;&#39;</span><span class="p">)</span>  
</span></span><span class="line"><span class="cl">            <span class="n">lightning_model</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">model</span><span class="o">.</span><span class="n">module</span><span class="o">.</span><span class="n">module</span>  
</span></span><span class="line"><span class="cl">            <span class="n">lightning_model</span><span class="o">.</span><span class="n">model</span><span class="o">.</span><span class="n">save_pretrained</span><span class="p">(</span><span class="n">dpath</span><span class="p">)</span>  
</span></span><span class="line"><span class="cl">            <span class="n">lightning_model</span><span class="o">.</span><span class="n">tokenizer</span><span class="o">.</span><span class="n">save_pretrained</span><span class="p">(</span><span class="n">dpath</span><span class="p">)</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>最后进行数据集构造和训练方法</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span><span class="lnt">51
</span><span class="lnt">52
</span><span class="lnt">53
</span><span class="lnt">54
</span><span class="lnt">55
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="k">def</span> <span class="nf">train</span><span class="p">(</span>  
</span></span><span class="line"><span class="cl">        <span class="n">model</span><span class="p">,</span>  
</span></span><span class="line"><span class="cl">        <span class="n">tokenizer</span><span class="p">,</span>  
</span></span><span class="line"><span class="cl">        <span class="n">train_df</span><span class="p">:</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">,</span>  
</span></span><span class="line"><span class="cl">        <span class="n">eval_df</span><span class="p">:</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">,</span>  
</span></span><span class="line"><span class="cl">        <span class="n">config</span><span class="p">:</span> <span class="n">Dict</span> <span class="o">=</span> <span class="kc">None</span><span class="p">,</span>  
</span></span><span class="line"><span class="cl"><span class="p">):</span>  
</span></span><span class="line"><span class="cl">    <span class="n">hf_model</span> <span class="o">=</span> <span class="n">HFModel</span><span class="p">(</span>  
</span></span><span class="line"><span class="cl">        <span class="n">tokenizer</span><span class="o">=</span><span class="n">tokenizer</span><span class="p">,</span>  
</span></span><span class="line"><span class="cl">        <span class="n">model</span><span class="o">=</span><span class="n">model</span><span class="p">,</span>  
</span></span><span class="line"><span class="cl">        <span class="n">config</span><span class="o">=</span><span class="n">config</span>  
</span></span><span class="line"><span class="cl">    <span class="p">)</span>  
</span></span><span class="line"><span class="cl">    <span class="n">dataset</span> <span class="o">=</span> <span class="n">DatasetModule</span><span class="p">(</span>  
</span></span><span class="line"><span class="cl">        <span class="n">train_df</span><span class="o">=</span><span class="n">train_df</span><span class="p">,</span>  
</span></span><span class="line"><span class="cl">        <span class="n">valid_df</span><span class="o">=</span><span class="n">eval_df</span><span class="p">,</span>  
</span></span><span class="line"><span class="cl">        <span class="n">tokenizer</span><span class="o">=</span><span class="n">tokenizer</span><span class="p">,</span>  
</span></span><span class="line"><span class="cl">        <span class="n">batch_size</span><span class="o">=</span><span class="n">config</span><span class="p">[</span><span class="s1">&#39;train&#39;</span><span class="p">][</span><span class="s1">&#39;batch_size&#39;</span><span class="p">],</span>  
</span></span><span class="line"><span class="cl">        <span class="n">source_max_token_len</span><span class="o">=</span><span class="n">config</span><span class="p">[</span><span class="s1">&#39;dataset&#39;</span><span class="p">][</span><span class="s1">&#39;source_max_token_len&#39;</span><span class="p">],</span>  
</span></span><span class="line"><span class="cl">        <span class="n">target_max_token_len</span><span class="o">=</span><span class="n">config</span><span class="p">[</span><span class="s1">&#39;dataset&#39;</span><span class="p">][</span><span class="s1">&#39;target_max_token_len&#39;</span><span class="p">],</span>  
</span></span><span class="line"><span class="cl">        <span class="n">num_workers</span><span class="o">=</span><span class="n">config</span><span class="p">[</span><span class="s1">&#39;train&#39;</span><span class="p">][</span><span class="s1">&#39;dataloader_num_workers&#39;</span><span class="p">],</span>  
</span></span><span class="line"><span class="cl">    <span class="p">)</span>  
</span></span><span class="line"><span class="cl">  
</span></span><span class="line"><span class="cl">    <span class="n">callbacks</span> <span class="o">=</span> <span class="p">[</span>  
</span></span><span class="line"><span class="cl">        <span class="n">RichProgressBar</span><span class="p">(</span><span class="n">refresh_rate</span><span class="o">=</span><span class="mi">5</span><span class="p">),</span>  
</span></span><span class="line"><span class="cl">        <span class="n">EarlyStopping</span><span class="p">(</span>  
</span></span><span class="line"><span class="cl">            <span class="n">monitor</span><span class="o">=</span><span class="s2">&#34;val_loss&#34;</span><span class="p">,</span>  
</span></span><span class="line"><span class="cl">            <span class="n">patience</span><span class="o">=</span><span class="n">config</span><span class="p">[</span><span class="s1">&#39;train&#39;</span><span class="p">][</span><span class="s1">&#39;early_stop_patience&#39;</span><span class="p">],</span>  
</span></span><span class="line"><span class="cl">            <span class="n">min_delta</span><span class="o">=</span><span class="mf">0.00</span><span class="p">,</span>  
</span></span><span class="line"><span class="cl">            <span class="n">verbose</span><span class="o">=</span><span class="kc">True</span><span class="p">,</span>  
</span></span><span class="line"><span class="cl">            <span class="n">mode</span><span class="o">=</span><span class="s1">&#39;min&#39;</span><span class="p">,</span>  
</span></span><span class="line"><span class="cl">        <span class="p">)]</span>  
</span></span><span class="line"><span class="cl">    <span class="n">checkpoint_callback</span> <span class="o">=</span> <span class="n">ModelCheckpoint</span><span class="p">(</span>  
</span></span><span class="line"><span class="cl">        <span class="n">dirpath</span><span class="o">=</span><span class="n">os</span><span class="o">.</span><span class="n">path</span><span class="o">.</span><span class="n">join</span><span class="p">(</span>  
</span></span><span class="line"><span class="cl">            <span class="n">config</span><span class="p">[</span><span class="s1">&#39;train&#39;</span><span class="p">][</span><span class="s1">&#39;save_dir&#39;</span><span class="p">],</span>  
</span></span><span class="line"><span class="cl">            <span class="n">config</span><span class="p">[</span><span class="s1">&#39;model&#39;</span><span class="p">][</span><span class="s1">&#39;name&#39;</span><span class="p">]</span>  
</span></span><span class="line"><span class="cl">        <span class="p">),</span>  
</span></span><span class="line"><span class="cl">        <span class="n">filename</span><span class="o">=</span><span class="s2">&#34;</span><span class="si">{epoch}</span><span class="s2">-</span><span class="si">{step}</span><span class="s2">-</span><span class="si">{val_loss:.2f}</span><span class="s2">-</span><span class="si">{train_loss:.2f}</span><span class="s2">&#34;</span><span class="p">,</span>  
</span></span><span class="line"><span class="cl">        <span class="n">monitor</span><span class="o">=</span><span class="s1">&#39;val_loss&#39;</span><span class="p">,</span>  
</span></span><span class="line"><span class="cl">    <span class="p">)</span>  
</span></span><span class="line"><span class="cl">    <span class="n">callbacks</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">checkpoint_callback</span><span class="p">)</span>  
</span></span><span class="line"><span class="cl">  
</span></span><span class="line"><span class="cl">    <span class="n">trainer</span> <span class="o">=</span> <span class="n">HFTrainer</span><span class="p">(</span>  
</span></span><span class="line"><span class="cl">        <span class="n">logger</span><span class="o">=</span><span class="n">pl_logger</span><span class="o">.</span><span class="n">TensorBoardLogger</span><span class="p">(</span><span class="n">save_dir</span><span class="o">=</span><span class="n">config</span><span class="p">[</span><span class="s1">&#39;train&#39;</span><span class="p">][</span><span class="s1">&#39;log_dir&#39;</span><span class="p">]),</span>  
</span></span><span class="line"><span class="cl">        <span class="n">callbacks</span><span class="o">=</span><span class="n">callbacks</span><span class="p">,</span>  
</span></span><span class="line"><span class="cl">        <span class="n">max_epochs</span><span class="o">=</span><span class="n">config</span><span class="p">[</span><span class="s1">&#39;train&#39;</span><span class="p">][</span><span class="s1">&#39;max_epoch&#39;</span><span class="p">],</span>  
</span></span><span class="line"><span class="cl">        <span class="n">accelerator</span><span class="o">=</span><span class="s1">&#39;gpu&#39;</span> <span class="k">if</span> <span class="n">torch</span><span class="o">.</span><span class="n">cuda</span><span class="o">.</span><span class="n">is_available</span><span class="p">()</span> <span class="k">else</span> <span class="s1">&#39;cpu&#39;</span><span class="p">,</span>  
</span></span><span class="line"><span class="cl">        <span class="n">devices</span><span class="o">=-</span><span class="mi">1</span><span class="p">,</span>  
</span></span><span class="line"><span class="cl">        <span class="n">precision</span><span class="o">=</span><span class="mi">16</span><span class="p">,</span>  
</span></span><span class="line"><span class="cl">        <span class="n">auto_select_gpus</span><span class="o">=</span><span class="kc">True</span><span class="p">,</span>  
</span></span><span class="line"><span class="cl">        <span class="n">log_every_n_steps</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span>  
</span></span><span class="line"><span class="cl">        <span class="n">strategy</span><span class="o">=</span><span class="n">DDPStrategy</span><span class="p">(</span><span class="n">find_unused_parameters</span><span class="o">=</span><span class="kc">False</span><span class="p">),</span>  
</span></span><span class="line"><span class="cl">        <span class="n">accumulate_grad_batches</span><span class="o">=</span><span class="n">config</span><span class="p">[</span><span class="s1">&#39;train&#39;</span><span class="p">][</span><span class="s1">&#39;accumulate_grad_batches&#39;</span><span class="p">],</span>  
</span></span><span class="line"><span class="cl">        <span class="n">auto_lr_find</span><span class="o">=</span><span class="kc">True</span><span class="p">,</span>  
</span></span><span class="line"><span class="cl">    <span class="p">)</span>  
</span></span><span class="line"><span class="cl">    <span class="n">trainer</span><span class="o">.</span><span class="n">fit</span><span class="p">(</span><span class="n">hf_model</span><span class="p">,</span> <span class="n">dataset</span><span class="p">)</span>
</span></span></code></pre></td></tr></table>
</div>
</div>]]></description></item></channel></rss>